<UserControl x:Class="WPF10.View.AnalogStopWatch"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WPF10.View"
             xmlns:viewmodel="clr-namespace:WPF10.ViewModel"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="400">


    <UserControl.Resources>
        <viewmodel:StopwatchViewModel x:Key="viewModel" />
        <viewmodel:BooleanNotConverter x:Key="notConverter" />
        <viewmodel:AngleConverter x:Key="angleConverter" />


        <ControlTemplate x:Key="StandardBtnTemplate" TargetType="Button">
            <Grid>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal">
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="BackgroundBorder"
                                    Storyboard.TargetProperty="Opacity"
                                    To="1"
                                    Duration="0:0:0.5" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="BackgroundBorder"
                                    Storyboard.TargetProperty="Opacity"
                                    To="0.5"
                                    Duration="0:0:0.5" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Focused">
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="BackgroundBorder"
                                    Storyboard.TargetProperty="Opacity"
                                    From="0"
                                    To="1"
                                    Duration="0:0:0.5"
                                    AutoReverse="True"
                                    RepeatBehavior="Forever" />
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>

                <Border x:Name="BackgroundBorder" Width="65" Height="65"
                    Background="Transparent"
                    BorderBrush="Black"
                    Margin="10"
                    BorderThickness="2"
                    CornerRadius="100" />
                <TextBlock Text="{TemplateBinding Content}" FontSize="13" FontWeight="Bold" Foreground="Black" HorizontalAlignment="Center"
            VerticalAlignment="Center" />
            </Grid>
        </ControlTemplate>
    </UserControl.Resources>
    
    
    <Grid x:Name="baseGrid" DataContext="{StaticResource ResourceKey=viewModel}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="400" />
        </Grid.ColumnDefinitions>

        <Ellipse Width="300" Height="300" Stroke="Black" StrokeThickness="2">
            <Ellipse.Fill>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <LinearGradientBrush.RelativeTransform>
                        <RotateTransform CenterX="0.5" CenterY="0.5" Angle="45" />
                    </LinearGradientBrush.RelativeTransform>

                    <GradientStop Color="#FFB03F3F" />
                    <GradientStop Color="#FFE4CECE" Offset="1" />
                </LinearGradientBrush>
            </Ellipse.Fill>
        </Ellipse>


        <Rectangle RenderTransformOrigin="0.5,0.5" Width="2" Height="150" Fill="Black">
            <Rectangle.RenderTransform>
                <TransformGroup>
                    <TranslateTransform Y="-60" />
                    <RotateTransform Angle="{Binding Seconds, Converter={StaticResource angleConverter}, ConverterParameter=Seconds}" />
                </TransformGroup>
            </Rectangle.RenderTransform>
        </Rectangle>


        <Rectangle RenderTransformOrigin="0.5,0.5" Width="4" Height="100" Fill="Black">
            <Rectangle.RenderTransform>
                <TransformGroup>
                    <TranslateTransform Y="-50" />
                    <RotateTransform Angle="{Binding Minutes, Converter={StaticResource angleConverter}, ConverterParameter=Minutes}" />
                </TransformGroup>
            </Rectangle.RenderTransform>
        </Rectangle>

        <Rectangle RenderTransformOrigin="0.5,0.5" Width="1" Height="150" Fill="Yellow">
            <Rectangle.RenderTransform>
                <TransformGroup>
                    <TranslateTransform Y="-60" />
                    <RotateTransform Angle="{Binding LapSeconds, Converter={StaticResource angleConverter}, ConverterParameter=Seconds}" />
                </TransformGroup>
            </Rectangle.RenderTransform>
        </Rectangle>

        <Rectangle RenderTransformOrigin="0.5,0.5" Width="2" Height="100" Fill="Yellow">
            <Rectangle.RenderTransform>
                <TransformGroup>
                    <TranslateTransform Y="-50" />
                    <RotateTransform Angle="{Binding LapMinutes, Converter={StaticResource angleConverter}, ConverterParameter=Minutes}" />
                </TransformGroup>
            </Rectangle.RenderTransform>
        </Rectangle>

        <Ellipse Width="10" Height="10" Fill="Black" />

        <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Center" >
            <Button x:Name="btn1" Template="{StaticResource StandardBtnTemplate}" IsEnabled="{Binding Running, Converter={StaticResource notConverter}}" Click="StartButton_Click" Content="Start"/>


            <Button IsEnabled="{Binding Running}" Template="{StaticResource StandardBtnTemplate}" Click="StopButton_Click">Stop</Button>
            <Button Template="{StaticResource StandardBtnTemplate}" Click="ResetButton_Click">Zeruj</Button>
            <Button Template="{StaticResource StandardBtnTemplate}" IsEnabled="{Binding Running}" Click="LapButton_Click">Okrążenie</Button>
        </StackPanel>
    </Grid>
</UserControl>
